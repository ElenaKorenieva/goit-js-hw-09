{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,QAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,SAAUJ,SAASC,cAAc,wBACjCI,UAAWL,SAASC,cAAc,0BAKpC,SAASK,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZbO,QAAQC,IAAIlB,GAiBZA,EAAKC,OAAOkB,iBAAiB,UAE7B,SAAiBC,GACfA,EAAMC,iBAEN,MAAQX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAC7C,IAAK,IAAIC,EAAI,EAAGC,GAAKN,EAAMO,MAAOF,IAAMH,EAAOK,MAAOF,IAAKC,IAAML,EAAKM,MACpErB,EAAcmB,EAAGC,GACdE,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAjC,GAASkC,OAAOC,QACd,uBAAqBxB,QAAiBC,MAAU,IAGnDwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAjC,GAASkC,OAAOG,QACd,uBAAqB1B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('form'),\n  firstDelayEl: document.querySelector('input[name=\"delay\"]'),\n  delayStepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nconsole.log(refs);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nrefs.formEl.addEventListener('submit', onCLick);\n\nfunction onCLick(event) {\n  event.preventDefault();\n  // console.log(refs.firstDelayEl);\n  const { delay, step, amount } = event.target.elements;\n  for (let i = 1, d = +delay.value; i <= +amount.value; i++, d += +step.value) {\n    createPromise(i, d)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise  ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","firstDelayEl","delayStepEl","amountEl","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","console","log","addEventListener","event","preventDefault","delay1","step","amount","target","elements","i","d","value","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.58b862a6.js.map"}