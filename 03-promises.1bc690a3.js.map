{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,OAAQC,SAASC,cAAc,QAC/BC,aAAcF,SAASC,cAAc,uBACrCE,YAAaH,SAASC,cAAc,sBACpCG,SAAUJ,SAASC,cAAc,wBACjCI,UAAWL,SAASC,cAAc,0BAKpC,SAASK,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPO,QAAQC,IAAIlB,GAiBZA,EAAKC,OAAOkB,iBAAiB,UAE7B,SAAiBC,GACfA,EAAMC,iBAGN,IADA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBZ,MAAOgB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACZC,EAAI,EAAGC,GAAKJ,EAAMK,MAAOF,IAAMD,EAAOG,MAAOF,IAAKC,IAAMH,EAAKI,MACpEtB,EAAcoB,EAAGC,GACdE,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBuB,EAAAnC,GAASoC,OAAOC,QACd,uBAAwCC,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M,IAGjD2B,OAAM,SAAAL,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBuB,EAAAnC,GAASoC,OAAOI,QACd,uBAAsCF,OAAf3B,EAAS,QAAY2B,OAAN1B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('form'),\n  firstDelayEl: document.querySelector('input[name=\"delay\"]'),\n  delayStepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('button[type=\"submit\"]'),\n};\n\nconsole.log(refs);\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\nrefs.formEl.addEventListener('submit', onCLick);\n\nfunction onCLick(event) {\n  event.preventDefault();\n  // console.log(refs.firstDelayEl);\n  const { delay, step, amount } = event.target.elements;\n  for (let i = 1, d = +delay.value; i <= +amount.value; i++, d += +step.value) {\n    createPromise(i, d)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise  ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formEl","document","querySelector","firstDelayEl","delayStepEl","amountEl","submitBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","console","log","addEventListener","event","preventDefault","_elements","target","elements","delay1","step","amount","i","d","value","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.1bc690a3.js.map"}